---

- name: Ensure kibana config file is present
  file:
     path: /etc/kibana/kibana.yml
     group: root
     owner: root
     mode: 0644

- name:  Patch kibana.yml for 'server.port'
  lineinfile:
    path: "{{ kibana_config_configfile }}"
    regexp: "^#server.port:"
    line: "server.port: {{ kibana_config_server_port }}"

- name:  Patch kibana.yml for 'server.host'
  lineinfile:
    path: "{{ kibana_config_configfile }}"
    regexp: "^#server.host:"
    line: "server.host: {{ ansible_default_ipv4.address }}"

#- name:  Patch kibana.yml for 'elasticsearch.url'
#  replace:
#    path: "{{ kibana::config::configfile }}"
#    regexp: "^elasticsearch.url:"
#    replace: "elasticsearch.url: \"{{ elasticsearch_url }}\""
#    owner: root
#    group : root
#    mode: 0644

#- name: Copy /usr/share/kibana into /app/Kibana
#  command: cp -R /usr/share/kibana/* /app/kibana

#- name: Change Permission
#  command: chown -R kibana:kibana /app/kibana

#- name: Edit kibana.service file
#  replace:
#    path: /etc/systemd/system/kibana.service
#    regexp: "^ExecStart=/usr/share/kibana/bin/kibana \"-c /etc/kibana/kibana.yml\""
#    replace: "ExecStart=/app/kibana/bin/kibana \"-c /etc/kibana/kibana.yml\""
#    owner: root
#    group : root
#    mode: 0644

- name: Check Firewalld is installed or not
  yum:
    name: firewalld
    state: present

- name: Ensure Firewalld is running
  service:
    name: firewalld
    state: started
    enabled: yes

- name: Add ports in firewall
  command: "firewall-cmd --add-port={{ item }} --permanent"
  loop: "{{ kibana_config_firewalld_ports }}"

- name: Reload firewall
  command: firewall-cmd --reload

- name: Enable Kibana service
  command: "{{ item }}"
  with_items:
    - systemctl daemon-reload
    - systemctl enable kibana

- name: Start Kibana Service
  service:
    name: kibana
    state: restarted
